{"pages":[],"posts":[{"title":"如何优雅地制作 NOI Linux 2 裁切版","text":"如何优雅地制作 NOI Linux 2 裁切版导言打OI的时候被蒋炎岩博士写的JSOI系统震撼到了(膜)。老早就有这个想法了，正好蒋炎岩博士把自己的操作系统原理课分享到了哔哩哔哩上，又在知乎上贴出了自己制作JSOI-Linux的历程。我简单地学习了下，准备自己也搭建一个类似的系统。 0.准备我的建议是，准备一个趁手的Linux就行。我使用的是在我家老爷机上安装的NOI-Linux 2.0。 没错，我就是这么热爱NOI 1.准备mini系统里需要的包蒋炎岩博士已经贴心地帮我们列好了。（见他的知乎专栏）我通过解包 ubuntu-noi-v2.0.iso 获取了其中的一部分包，但还有一部分包找不到完全一样名称的文件。没办法，只能妥协。最终我准备的包列表如下： 123456789101112131415161718192021222324binutils_2.34-6ubuntu1_amd64.debbinutils-common_2.34-6ubuntu1_amd64.debbinutils-x86-64-linux-gnu_2.34-6ubuntu1_amd64.debcpp-9_9.3.0-10ubuntu2_amd64.debg++-9_9.3.0-10ubuntu2_amd64.debgcc-9_9.3.0-10ubuntu2_amd64.deblibasan5_9.3.0-10ubuntu2_amd64.deblibbinutils_2.34-6ubuntu1_amd64.deblibc6_2.31-0ubuntu9_amd64.deblibc6-dev_2.31-0ubuntu9_amd64.deblibc-dev-bin_2.31-0ubuntu9_amd64.deblibctf0_2.34-6ubuntu1_amd64.deblibctf-nobfd0_2.34-6ubuntu1_amd64.deblibexpat1_2.2.9-1ubuntu0.6_amd64.deblibgcc1_10.3.0-1ubuntu1~20.04_amd64.deblibgcc-9-dev_9.3.0-10ubuntu2_amd64.deblibgmp10_6.2.0+dfsg-4ubuntu0.1_amd64.deblibisl22_0.22.1-1_amd64.deblibmpc3_1.1.0-1_amd64.deblibmpfr6_4.0.2-1_amd64.deblibstdc++6_10.3.0-1ubuntu1~20.04_amd64.deblibstdc++-9-dev_9.3.0-10ubuntu2_amd64.deblinux-libc-dev_5.4.0-148.165_amd64.debzlib1g_1.2.11.dfsg-2ubuntu1_amd64.deb 基本差不多，版本号没大问题就应该没啥大问题了。 接下来，该考虑下如何把这些包装进系统的filesystem了。 我写了个简单的Python3脚本，来批处理这些deb包： 12345678import osfs = os.listdir()for f in fs: if f.endswith(&quot;.deb&quot;): os.system(&quot;dpkg -X &quot; + f + &quot; ./rtfs/&quot;)input(&quot;\\n\\nfinished.&quot;) 包里的内容会被解到rtfs目录下。 2.装载Busyboxbusybox，linux下的瑞士军刀！ 通过busybox，我们可以便捷地使用一些诸如 sh ， vi ， cd ， ls 等常用命令。 去busybox的下载站下载源码。我这里使用的是 busybox-1.36.0.tar.bz2 。解压缩。 1tar -jxvf busybox-1.36.0.tar.bz2 接下来准备编译。 1make menuconfig 日常报错： curses.h: No such file or directory 。原因是缺失ncurses库。我们手动安装下。 1sudo apt-get install libncurses5-dev libncursesw5-dev 继续编译。我勾选了支持Unicode的相关选项。还有最重要的，静态编译。 Settings--Build Options 下的 Build static binary (no shared libs) 必选！！！ 我的CPU（奔腾E5600，够老了吧）是双核的。于是我开两线程编译。 1make -j 2 接下来就是等待，我顺便去洗了个碗。 （其实编译没那么慢的，在我去洗碗之前就好了） （当然，碗还是要洗的） 3.准备镜像文件系统后面的操作以我自己的目录结构为准，大家可自行调整！！！ 粗略计算了下256MB大概够了。（事实上只用了200MB不到） 1dd if=/dev/zero of=rootfs.img bs=1M count=256 然后格式化成ext4文件系统。 1mkfs.ext4 rootfs.img 接下来挂载到fs找个目录下： 12mkdir fssudo mount -t ext4 -o loop rootfs.img ./fs/ 把busybox装进去。 12cd busybox/busybox-1.36.0/sudo make install CONFIG_PREFIX=../../fs/ 新建相关文件夹，拷贝配置文件。 123cd ../../fs/sudo mkdir proc dev etc home mntsudo cp ../busybox/busybox-1.36.0/examples/bootfloppy/etc/* etc/ -r 注意 etc/init.d/rsS 文件最后要加上 /bin/mount -o remount,rw / 来使最终的文件系统可写。 所以我目前的目录结构是这样的： 12345678910111213141516171819├── busybox│ └── busybox-1.36.0│ └── (something else)├── deb│ └── rtfs│ └── (something else)├── fs│ ├── bin│ ├── dev│ ├── etc│ │ └── init.d│ ├── home│ ├── lost+found [error opening dir]│ ├── mnt│ ├── proc│ ├── sbin│ └── usr│ ├── bin│ └── sbin 然后把之前解好的包拷贝过来。 12sudo cp ../deb/rtfs/*. -r 赋权，然后卸载这个盘： 123cd ../sudo chmod +777 -R fs/sudo umount fs 4.准备内核按理来说内核也是要我自己编译的，但我不知道该下载哪份源码来编译。于是我索性去Ubuntu的包网站下载了 linux-image-5.4.0-42-generic_5.4.0-42.46_amd64.deb 这个包，用之前的方法解开，在boot下找到了 vmlinuz-5.4.0-42-generic 这个内核镜像。 能用。 5.启动准备我新建了一个文件夹，把rootfs和kernel全放了进去。 安装一下qemu。我这里只是测试用，最后的使用环境应该是win7x86。具体安装过程就不演示了。 记得编译时候要打开网卡支持。--enable-slirp 最后尝试启动。 12345qemu-system-x86_64 \\ -kernel vmlinuz-5.4.0-42-generic \\ -hda rootfs.img \\ -append &quot;root=/dev/sda console=ttyS0&quot; \\ -nographic \\ 闪过一些熟悉的启动日志后，我们进入了命令行界面。（欣喜） 输入一些指令看看。比如最重要的 g++。 诶，怎么没反应？（作者一度开始怀疑人生） 经过试验排查，原来我们需要输入 g++-9 才行。 1g++-9 --version 输出 1234g++-9 (Ubuntu 9.3.0-10ubuntu2) 9.3.0Copyright (C) 2019 Free Software Foundation, Inc.This is free software; see the source for copying conditions. There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 看来是真的成功了（大喜）。 最后，使用 poweroff 关闭虚拟机。 6.其他 感谢蒋炎岩博士！（超大声） 我学了Golang，并且重新实现JSOI Web Client的项目已经在路上了。 求助！我不知道如何配置qemu的网络选项（悲） 2023-05-28 21:55 总第四次编辑","link":"2023/05/28/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E5%88%B6%E4%BD%9C%20NOI%20Linux%202%20%E8%A3%81%E5%88%87%E7%89%88/"}],"tags":[{"name":"linux","slug":"linux","link":"tags/linux/"},{"name":"noi","slug":"noi","link":"tags/noi/"},{"name":"oi","slug":"oi","link":"tags/oi/"},{"name":"system","slug":"system","link":"tags/system/"}],"categories":[]}